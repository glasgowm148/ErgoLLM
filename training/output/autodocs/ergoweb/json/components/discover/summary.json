{
  "folderName": "discover",
  "folderPath": ".autodoc/docs/json/components/discover",
  "url": "https://github.com/ergoplatform/ergoweb/.autodoc/docs/json/components/discover",
  "files": [
    {
      "fileName": "DiscoverHero.tsx",
      "filePath": "components/discover/DiscoverHero.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/discover/DiscoverHero.tsx",
      "summary": "The `DiscoverERG` component is a React component that renders a section of the Ergoweb project's website. The purpose of this component is to provide users with various resources to learn about and interact with the Ergo blockchain platform. \n\nThe component imports several dependencies, including `Link` and `FormattedMessage` from the `next/link` and `react-intl` libraries respectively. It also imports the `getIconComponentByName` function from a custom `icons-map` utility file, and two SVG icons, `DiscoverErgHero` and `DiscoverErgHeroLight`, from custom `icons` files. Finally, it imports a custom `Button` component.\n\nThe component defines several variables using the `useIntl` hook to format text messages for internationalization. These variables are used as the text for the various buttons that link to different resources related to Ergo. \n\nThe component renders a container div with the id `DiscoverERG` and several child divs that contain the various resources. The first child div contains an SVG image of the Ergo logo, which changes depending on whether the user has selected a light or dark theme. The second child div contains a title and a paragraph describing Ergo. The remaining child divs contain buttons that link to different resources, such as the Ergo manifesto, documentation, and a YouTube channel. \n\nThe component also uses the `Link` component from the `next/link` library to render a button that links to the Ergonaut website, which provides additional resources for learning about Ergo. \n\nOverall, the `DiscoverERG` component provides users with a centralized location to access various resources related to Ergo, making it easier for users to learn about and interact with the platform.",
      "questions": "1. What is the purpose of the `useIntl` hook and how is it used in this code?\n- The `useIntl` hook is used to access the internationalization API provided by the `react-intl` library. It is used in this code to format messages for the buttons displayed on the page.\n\n2. What is the significance of the `DiscoverErgHero` and `DiscoverErgHeroLight` components?\n- These components are used to display different versions of the hero image depending on whether the user has selected a light or dark theme. They are imported from separate files and have different viewBox and className properties.\n\n3. How are the buttons on the page linked to external URLs or internal pages?\n- The buttons are created using the `Button` component and have `url` and `newTab` props that determine the destination of the link and whether it should open in a new tab. The last button is created using the `Link` component from the `next/link` library and has a `href` prop that determines the internal page it links to."
    },
    {
      "fileName": "Documents.tsx",
      "filePath": "components/discover/Documents.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/discover/Documents.tsx",
      "summary": "The code defines a React component called `Documents` that displays a list of documents grouped by section. The component takes an optional `documents` prop, which is an object containing an array of document data. The `processDocs` function is called to transform the document data into a format that can be used by the component. \n\nThe `processDocs` function first sorts the documents by title using the `_.sortBy` method from the Lodash library. It then groups the documents by a `group` attribute using the `_.groupBy` method, and maps each group to an object with a `name` property and an array of `documents`. The `adjustDoc` function is used to transform each document object into a simplified format with a `title`, `download`, and `url` property. If the document has no `url` property, the `file.data.attributes.url` property is used instead. The resulting array of group objects is sorted by `section` using `_.sortBy` and returned.\n\nThe `Documents` component uses the `useEffect` hook to load the `tw-elements` library when the component mounts. The `processedDocs` variable is set to the result of calling `processDocs` with the `documents` prop. The component then renders a heading and description, followed by an accordion-style list of documents grouped by section. The `processedDocs` array is mapped to a series of collapsible sections using the `map` method. Each section has a heading button that toggles the visibility of the documents in that section. The document titles are rendered as links that open in a new tab when clicked.\n\nOverall, this code provides a reusable component for displaying a list of documents grouped by section. It uses the Lodash library to sort and group the document data, and the `tw-elements` library for styling. The component can be used in a larger project to display documentation, research papers, or other types of documents.",
      "questions": "1. What is the purpose of the `processDocs` function?\n   - The `processDocs` function takes in a `documents` object and processes it by sorting, grouping, and adjusting the data, and returns the processed result.\n\n2. What is the purpose of the `useEffect` hook in the `Documents` component?\n   - The `useEffect` hook is used to load the `tw-elements` library when the component mounts.\n\n3. What is the purpose of the `docs-accordion` section in the `Documents` component?\n   - The `docs-accordion` section displays the processed documents in an accordion format, where each section can be expanded or collapsed to show or hide the documents within it."
    },
    {
      "fileName": "ErgoExplorer.tsx",
      "filePath": "components/discover/ErgoExplorer.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/discover/ErgoExplorer.tsx",
      "summary": "The code is a React component that renders a section of the Ergoweb project's website called \"Explore\". The purpose of this component is to provide users with two buttons that allow them to interact with the Ergo blockchain. The first button takes users to the Ergo Explorer, which is a tool that allows them to view every transaction made on the blockchain in real-time. The second button takes users to ergo.watch, which is a website that provides community-curated metrics on the Ergo blockchain.\n\nThe component uses the `Link` component from the `next/link` library to create links to the Ergo Explorer and ergo.watch. The `useIntl` hook from the `react-intl` library is used to provide internationalization support for the component. The `getIconComponentByName` function from the `../../utils/icons-map` file is used to render an arrow icon next to each button.\n\nThe `Explore` component returns a JSX element that contains two buttons wrapped in `Link` components. Each button has an `onClick` event handler that takes users to the Ergo Explorer or ergo.watch when clicked. The text for each button is obtained using the `intl.formatMessage` method, which takes an object with an `id` and `defaultMessage` property. The `id` property is used to look up the text for the button in a translation file, while the `defaultMessage` property provides a fallback value if the translation is not available.\n\nOverall, this component provides a simple and intuitive way for users to interact with the Ergo blockchain. By clicking on one of the buttons, users can access real-time transaction data or community-curated metrics, depending on their needs. The use of internationalization support ensures that the component is accessible to users from different countries and language backgrounds.",
      "questions": "1. What is the purpose of the `useIntl` hook and how is it used in this code?\n   - The `useIntl` hook is used to format and display internationalized messages. In this code, it is used to set the text for `button1Text` and `button2Text` based on the user's locale.\n2. What is the significance of the `Link` component and how is it used in this code?\n   - The `Link` component is used to create links to external URLs. In this code, it is used to create links to the Ergo Explorer and ergo.watch websites when the corresponding buttons are clicked.\n3. What is the purpose of the `getIconComponentByName` function and where is it defined?\n   - The `getIconComponentByName` function is used to retrieve an icon component based on its name. It is defined in the `icons-map.js` file located in the `utils` directory."
    },
    {
      "fileName": "FAQ.tsx",
      "filePath": "components/discover/FAQ.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/discover/FAQ.tsx",
      "summary": "The code is a React component that renders a Frequently Asked Questions (FAQ) section on a web page. The component takes in a prop called `faq`, which is an array of objects containing question and answer data. The `processFaq` function sorts the questions in the `faq` array by their `order` attribute and returns the sorted array. \n\nThe rendered FAQ section consists of two columns: the left column contains a title, a subtitle, and a message, while the right column contains the questions and answers. The right column is an accordion-style list of questions and answers, where each question is a button that toggles the display of its corresponding answer. The questions and answers are generated dynamically from the `faq` prop using the `map` function. \n\nThe component uses several third-party libraries to render the FAQ section. The `lodash` library is used to sort the questions in the `processFaq` function. The `react-intl` library is used to internationalize the text in the component. The `react-markdown` library is used to render the answer text as Markdown, with support for GitHub Flavored Markdown (GFM) and line breaks. The `tw-elements` library is loaded using the `useEffect` hook to add some custom styles to the FAQ section. \n\nThe component is responsive, with different layouts for small and large screens. On small screens, the left column is hidden, and the title, subtitle, and message are displayed above the questions and answers. On large screens, the left column is displayed, and the title, subtitle, and message are displayed above the questions and answers in the left column. \n\nOverall, this component provides a reusable and customizable way to display a FAQ section on a web page. The `faq` prop can be populated with different question and answer data to create different FAQ sections. The component can be styled using CSS to match the design of the web page.",
      "questions": "1. What is the purpose of the `processFaq` function?\n   \n   The `processFaq` function sorts the questions in the FAQ based on their `order` attribute and returns the sorted list.\n\n2. What external libraries are being used in this code?\n\n   The code is using several external libraries including `lodash`, `react`, `react-intl`, and `react-markdown`.\n\n3. What is the purpose of the `useEffect` hook in this code?\n\n   The `useEffect` hook is being used to load the `tw-elements` library when the component mounts."
    },
    {
      "fileName": "GrantsAndBounties.tsx",
      "filePath": "components/discover/GrantsAndBounties.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/discover/GrantsAndBounties.tsx",
      "summary": "The code is a React component that renders a section of the Ergoweb project's website called \"Grants & Bounties\". The purpose of this section is to provide information about how users can contribute to the Ergo ecosystem and potentially receive funding for their projects. \n\nThe component imports the `useIntl` hook from the `react-intl` library, which is used to format and display text in different languages. It also imports the `Button` component from a local file.\n\nThe component defines three variables (`button1Text`, `button2Text`, and `button3Text`) that use the `intl.formatMessage` method to retrieve text from a language file based on the specified message IDs. These variables are then passed as props to three instances of the `Button` component, each with a different URL and text.\n\nThe component returns a div that contains a heading, a paragraph of text, and three buttons. The heading displays the text \"Grants & Bounties\" in bold font. The paragraph of text provides information about the types of projects that are eligible for funding and encourages users to start a raffle to receive funding quickly. The three buttons are labeled \"CONTRIBUTING\", \"START A RAFFLE\", and \"GET IN TOUCH\", and each button has a different URL that corresponds to the action it represents.\n\nOverall, this component serves as a way for users to learn about and engage with the Ergo ecosystem by providing clear calls to action and information about potential funding opportunities. It can be used as a standalone component or integrated into a larger website or application. \n\nExample usage:\n```\nimport GrantsAndBounties from './GrantsAndBounties';\n\nfunction App() {\n  return (\n    <div>\n      <GrantsAndBounties />\n    </div>\n  );\n}\n```",
      "questions": "1. What is the purpose of the `useIntl` hook and how is it used in this code?\n   - The `useIntl` hook is used to format internationalized messages and is imported from the `react-intl` library. In this code, it is used to format the text for three buttons displayed on the page.\n2. What is the significance of the `GrantsAndBounties` component and where is it used?\n   - The `GrantsAndBounties` component is a functional component that returns JSX for displaying information and buttons related to grants and bounties. It is exported as the default component from this file and can be used in other components or pages as needed.\n3. What is the purpose of the `Button` component and how is it customized in this code?\n   - The `Button` component is a custom component that displays a button with customizable text, URL, and styling. In this code, it is used to display three buttons with different text and URLs, and with a consistent style that includes an arrow icon and orange text color."
    }
  ],
  "folders": [],
  "summary": "The `.autodoc/docs/json/components/discover` folder contains several React components that are part of the Ergoweb project. These components are designed to provide users with various resources and information about the Ergo blockchain platform, as well as ways to interact with it.\n\n1. `DiscoverHero.tsx`: This component renders a section of the Ergoweb project's website that provides users with resources to learn about and interact with the Ergo blockchain platform. It includes buttons linking to the Ergo manifesto, documentation, and a YouTube channel. The component also links to the Ergonaut website for additional resources. Example usage:\n\n   ```jsx\n   import DiscoverHero from './DiscoverHero';\n\n   function App() {\n     return (\n       <div>\n         <DiscoverHero />\n       </div>\n     );\n   }\n   ```\n\n2. `Documents.tsx`: This component displays a list of documents grouped by section. It can be used to display documentation, research papers, or other types of documents. The component takes an optional `documents` prop, which is an object containing an array of document data. Example usage:\n\n   ```jsx\n   import Documents from './Documents';\n\n   function App() {\n     return (\n       <div>\n         <Documents documents={myDocuments} />\n       </div>\n     );\n   }\n   ```\n\n3. `ErgoExplorer.tsx`: This component renders a section called \"Explore\" that provides users with two buttons to interact with the Ergo blockchain. The first button links to the Ergo Explorer, a tool for viewing real-time transaction data, and the second button links to ergo.watch, a website with community-curated metrics. Example usage:\n\n   ```jsx\n   import ErgoExplorer from './ErgoExplorer';\n\n   function App() {\n     return (\n       <div>\n         <ErgoExplorer />\n       </div>\n     );\n   }\n   ```\n\n4. `FAQ.tsx`: This component renders a Frequently Asked Questions (FAQ) section on a web page. It takes a `faq` prop, which is an array of objects containing question and answer data. The component is responsive and can be styled using CSS. Example usage:\n\n   ```jsx\n   import FAQ from './FAQ';\n\n   function App() {\n     return (\n       <div>\n         <FAQ faq={myFaqData} />\n       </div>\n     );\n   }\n   ```\n\n5. `GrantsAndBounties.tsx`: This component renders a \"Grants & Bounties\" section that provides information about contributing to the Ergo ecosystem and potential funding opportunities. It includes buttons for contributing, starting a raffle, and getting in touch. Example usage:\n\n   ```jsx\n   import GrantsAndBounties from './GrantsAndBounties';\n\n   function App() {\n     return (\n       <div>\n         <GrantsAndBounties />\n       </div>\n     );\n   }\n   ```\n\nThese components can be used individually or combined to create a comprehensive Ergo-related website or application. They are designed to be reusable and customizable, with internationalization support and responsive layouts.",
  "questions": ""
}