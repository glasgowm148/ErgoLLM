{
  "folderName": "community",
  "folderPath": ".autodoc/docs/json/components/community",
  "url": "https://github.com/ergoplatform/ergoweb/.autodoc/docs/json/components/community",
  "files": [
    {
      "fileName": "CommunityCard.tsx",
      "filePath": "components/community/CommunityCard.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/community/CommunityCard.tsx",
      "summary": "The code defines a React component called `CommunityCard` that renders a card with a title, an icon, some text, and a link to an external URL. The component takes four props: `title` (a string), `icon` (a string representing the name of an icon), `text` (a string), and `url` (a string representing the URL to link to).\n\nThe component uses the `Link` component from the `next/link` library to create a client-side navigation link to the external URL. The `passHref` prop is passed to `Link` to ensure that the `a` tag that wraps the card is passed the `href` attribute. The `target=\"_blank\"` and `rel=\"noopener noreferrer\"` attributes are added to the `a` tag to open the link in a new tab and prevent security vulnerabilities.\n\nThe card itself is styled using Tailwind CSS classes. It has a rounded rectangle shape (`rounded-xl`), a background color (`card-bg`), and a border (`dark:border-brand-orange border`). The icon and title are displayed side by side using a flexbox layout (`flex`). The icon is obtained by calling the `getIconComponentByName` function from the `../../utils/icons-map` module, passing it the `icon` prop. The `getIconComponentByName` function returns a React component that renders the specified icon. The title is displayed in a bold font (`font-vinila-extended`) and a large size (`text-[24px]`). The text is displayed below the title.\n\nThis component can be used in the larger project to display cards with community information, such as links to social media pages or forums. The `CommunityCard` component can be reused throughout the project by passing different props to customize the content and appearance of each card. For example:\n\n```\n<CommunityCard\n  title=\"Join our Discord server\"\n  icon=\"discord\"\n  text=\"Connect with other members of our community on Discord.\"\n  url=\"https://discord.gg/example\"\n/>\n```",
      "questions": "1. What is the purpose of the `getIconComponentByName` function and where is it defined?\n- The `getIconComponentByName` function is used to retrieve an icon component based on its name, and it is defined in the `utils/icons-map` file.\n2. What is the expected format of the `url` prop passed to the `CommunityCard` component?\n- The `url` prop is expected to be a string representing the URL that the card should link to.\n3. What styling classes are applied to the card element and what is their purpose?\n- The `rounded-xl`, `px-9`, `py-8`, `card-bg`, `dark:border-brand-orange`, `border`, `relative`, and `z-10` classes are applied to the card element to provide styling for its shape, padding, background color, border, and positioning."
    },
    {
      "fileName": "CommunityCardsFeed.tsx",
      "filePath": "components/community/CommunityCardsFeed.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/community/CommunityCardsFeed.tsx",
      "summary": "The code defines a React component called `JoinUs` that renders a section of a web page with links to various social media platforms and community resources related to the Ergo blockchain platform. The component imports the `FormattedMessage` component from the `react-intl` library, which is used to provide translations for the text displayed on the page. \n\nThe `cards` array contains objects that define the properties of each link card, including the title, text, icon, and URL. The `FormattedMessageFixed` function is a wrapper around the `FormattedMessage` component that is used to pass the `defaultMessage` and `id` props to the `FormattedMessage` component. \n\nThe `JoinUs` component renders two different layouts depending on the screen size. On smaller screens, the cards are displayed in a horizontal scrollable list, while on larger screens, the cards are displayed in a grid layout. The `CommunityCard` component is used to render each link card by passing the appropriate properties from the `cards` array. \n\nThe component also includes a paragraph of text that encourages users to get involved with the Ergo community and provides a link to the Contributing page on the Ergonaut website. \n\nOverall, this component serves as a central hub for users to discover and connect with the Ergo community across various social media platforms and community resources. It provides a user-friendly and visually appealing way to access these resources and encourages community engagement. \n\nExample usage: \n\n```jsx\nimport JoinUs from './JoinUs';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Welcome to the Ergo Community!</h1>\n      <JoinUs />\n    </div>\n  );\n}\n```",
      "questions": "1. What is the purpose of the `JoinUs` component?\n- The `JoinUs` component is responsible for rendering a section of the Ergoweb project that displays various community links and information.\n\n2. What is the `FormattedMessageFixed` function used for?\n- The `FormattedMessageFixed` function is a custom wrapper around the `FormattedMessage` component from the `react-intl` library, used to provide default messages and message IDs for the community card titles and text.\n\n3. What is the purpose of the `cards` array?\n- The `cards` array contains objects representing various community links and information, which are used to render `CommunityCard` components within the `JoinUs` component."
    },
    {
      "fileName": "CommunityHero.tsx",
      "filePath": "components/community/CommunityHero.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/community/CommunityHero.tsx",
      "summary": "This code defines a React component called `CommunityHero` that renders a section of a webpage for the ergoweb project. The component imports the `FormattedMessage` component from the `react-intl` library, which is used to display localized text. \n\nThe `CommunityHero` component returns a `div` element with an `id` of \"CommunityHero\" and several CSS classes for styling. Inside the `div`, there is another `div` element that contains a `p` element with a subtitle for the community section of the webpage. The subtitle is displayed using the `FormattedMessage` component, which takes two props: `defaultMessage` and `id`. The `defaultMessage` prop is the text to display if no translation is available, and the `id` prop is used to look up the translated text in the project's localization files. \n\nFinally, the `CommunityHero` component renders an `h1` element with the text \"Community\". This heading is not localized and is likely used as a visual cue to the user that they are in the community section of the webpage.\n\nOverall, this code defines a simple React component that renders a section of a webpage with a localized subtitle and a heading. It is likely used as part of a larger project to display information about the ergoweb community and encourage user engagement. Here is an example of how the `CommunityHero` component might be used in a larger React component:\n\n```\nimport CommunityHero from './CommunityHero';\n\nfunction CommunityPage() {\n  return (\n    <div>\n      <CommunityHero />\n      {/* other community page content */}\n    </div>\n  );\n}\n```",
      "questions": "1. What is the purpose of the `FormattedMessage` component from 'react-intl' being imported?\n- The `FormattedMessage` component is being used to display a localized subtitle for the CommunityHero component.\n\n2. What is the significance of the CSS classes being used in the JSX code?\n- The CSS classes are being used to style the CommunityHero component, with specific styles being applied based on screen size.\n\n3. Why is the `h1` element included in the JSX code without any text or additional styling?\n- It is unclear why the `h1` element is included without any text or additional styling, as it does not appear to serve any purpose in the current implementation of the CommunityHero component."
    },
    {
      "fileName": "ErgoFoundation.tsx",
      "filePath": "components/community/ErgoFoundation.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/community/ErgoFoundation.tsx",
      "summary": "The code defines a React component called `ErgoFoundation` that renders a section of the Ergoweb project's website. The purpose of this component is to display information about the Ergo Foundation, a community-driven entity focused on promoting the development and adoption of the Ergo Platform and its native token (ERG). \n\nThe component is composed of two main sections. The first section displays the Ergo Foundation logo using two different versions of the `ErgoFoundationIcon` component, one for light backgrounds and one for dark backgrounds. The second section displays a list of six items that describe the goals of the Ergo Foundation. Each item is displayed using the `FormattedMessage` component, which allows for internationalization of the text. The `FormattedMessage` component takes an `id` and a `defaultMessage` prop, which are used to look up the translated text in a language file. The `values` prop is used to pass in dynamic content, such as the bolded text in each list item.\n\nThe component uses various CSS classes to style the content, including `max-w-[1300px]` to set a maximum width for the section, `mx-auto` to center it horizontally, and `font-vinila-extended` to set a custom font. The component is also responsive, with different font sizes and margins for smaller and larger screens.\n\nThis component can be used as a standalone section on the Ergoweb website or as part of a larger page that includes other sections about the Ergo Platform and its ecosystem. It provides a clear and concise overview of the goals of the Ergo Foundation and helps to promote the adoption of the Ergo Platform.",
      "questions": "1. What is the purpose of the `ErgoFoundation` component?\n- The `ErgoFoundation` component is responsible for rendering the content related to the Ergo Foundation, which is a community-driven entity focused on promoting non-breaking development of Ergo Platform protocol, publicizing the widespread adoption and use of Ergo Platform and its native token (ERG), developing the ecosystem around the Ergo Platform, spreading the use of Ergo Platform and blockchain technology for social good, upholding truly decentralized infrastructure, and supporting privacy as a basic human right.\n\n2. What libraries or components are being imported and used in this file?\n- This file imports and uses the `FormattedMessage` component from the `react-intl` library, as well as the `ErgoFoundationIcon` and `ErgoFoundationIconLight` components from a local `icons` file.\n\n3. What is the purpose of the `values` prop being passed to the `FormattedMessage` components?\n- The `values` prop is being used to pass in an object with a `b` key, which is a function that takes in an array of `chunks` and returns a `strong` element with those `chunks` as its children. This is used to bold certain parts of the text within the `FormattedMessage` components."
    },
    {
      "fileName": "HallOfFame.tsx",
      "filePath": "components/community/HallOfFame.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/community/HallOfFame.tsx",
      "summary": "The code defines a React component called `HallOfFame` that displays a list of people involved in the Ergo project. The component imports several other components and icons, including `Tab` from `@headlessui/react`, `Image` from `next/image`, `Link` from `next/link`, `FormattedMessage` from `react-intl`, and several custom icons. \n\nThe `HallOfFame` component takes an optional prop called `teamMembers`, which is an array of objects representing people involved in the project. Each object has several properties, including `name`, `bio`, `github`, `linkedin`, `twitter`, and `image`. \n\nThe `HallOfFame` component renders a tabbed interface with three tabs: \"CORE\", \"COMMUNITY\", and \"FOUNDATION\". Each tab displays a list of people from the `teamMembers` array whose `group` property matches the name of the tab. The list is displayed using the `GroupPersons` function, which takes two arguments: the `teamMembers` array and the name of the group to display. \n\nThe `GroupPersons` function filters the `teamMembers` array to include only those objects whose `group` property matches the specified group name. It then maps over the filtered array and renders a `HallOfFamePerson` component for each person. \n\nThe `HallOfFamePerson` component takes several props representing information about a person, including their name, bio, social media links, and image. It renders a card with a flip animation that displays the person's image on the front and their bio on the back. The component also displays the person's name and social media links below the card. \n\nOverall, the `HallOfFame` component provides a way to showcase the people involved in the Ergo project and highlight their contributions. The tabbed interface allows users to easily switch between different groups of people, and the `HallOfFamePerson` component provides a visually appealing way to display information about each person.",
      "questions": "1. What is the purpose of the `HallOfFame` component?\n- The `HallOfFame` component displays a list of people involved in the Ergo project, grouped by their role in the ecosystem (core team, community, or foundation).\n\n2. What is the `GroupPersons` function used for?\n- The `GroupPersons` function filters the list of people passed as `data` based on their `group` attribute, and returns a list of `HallOfFamePerson` components for each person in the filtered list.\n\n3. What libraries and components are being imported in this file?\n- The file imports `Tab` from `@headlessui/react`, `Image` from `next/image`, `Link` from `next/link`, `FormattedMessage` from `react-intl`, and several custom icons. It also defines two types (`Props` and `HallOfFamePersonProps`) and two components (`HallOfFamePerson` and `HallOfFame`)."
    },
    {
      "fileName": "OurMission.tsx",
      "filePath": "components/community/OurMission.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/community/OurMission.tsx",
      "summary": "The code defines a React component called `OurMission` that renders a section of the Ergoweb website. The component displays the title \"Our Mission\" in a large font size and a description of the Ergo Foundation's commitment to the development of the Ergo Platform protocol. The description is displayed in a smaller font size and is followed by three buttons that link to different pages on the website. \n\nEach button is implemented using the `Button` component from the `../Button` file. The `text` prop of each button is a `FormattedMessage` component that displays a localized string. The `url` prop specifies the link that the button should navigate to when clicked. The `newTab` prop specifies whether the link should open in a new tab or not. The `underline` prop specifies whether the button text should be underlined or not. The `textColor` prop specifies the color of the button text. The `background` prop specifies whether the button should have a background color or not. The `icon` prop specifies the name of the icon to display next to the button text. The `iconColor` prop specifies the color of the icon. The `customClass` prop specifies any additional CSS classes to apply to the button.\n\nThe `FormattedMessage` components use the `react-intl` library to provide internationalization support for the website. The `id` prop of each `FormattedMessage` component specifies a unique identifier for the string to be localized. The `defaultMessage` prop specifies the default string to use if a translation for the specified identifier is not available.\n\nOverall, this code defines a reusable component that can be used to display information about the Ergo Foundation's mission on different pages of the Ergoweb website. The use of the `FormattedMessage` and `Button` components allows for easy localization and customization of the component's content and appearance.",
      "questions": "1. What is the purpose of the `OurMission` component?\n- The `OurMission` component is responsible for rendering a section of the Ergo Foundation website that displays information about the organization's mission.\n\n2. What libraries or frameworks are being used in this code?\n- The code is using the `react-intl` library for internationalization and the `Button` component from a custom module.\n\n3. What is the layout of the HTML being generated by this code?\n- The code is generating a `div` element with an `id` of \"Foundation\" and a class of \"max-w-[1300px] mx-auto p-4 relative z-10\". Within this `div`, there is a `p` element with a class of \"font-vinila-extended-bold text-[40px] md:text-[80px] mb-8\" that contains the title of the section. Following this, there is another `div` element with a class of \"md:mx-auto md:w-[758px]\" that contains three `Button` components and a `p` element with a class of \"text-[#807e7e] dark:text-[#807e7e] md:text-[16px] md:max-w-3xl\" that contains a sub-description of the section."
    },
    {
      "fileName": "Sigmanauts.tsx",
      "filePath": "components/community/Sigmanauts.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/community/Sigmanauts.tsx",
      "summary": "The code is a React component that renders a section of the Ergoweb website called \"Sigmanauts\". The purpose of this component is to provide information about the Sigmanaut Training Programme and encourage users to apply for it. \n\nThe component imports two modules from external libraries: `FormattedMessage` and `useIntl` from `react-intl`, and `Button` from a custom component. `FormattedMessage` is used to display localized text, while `useIntl` is used to format the text based on the user's locale. `Button` is a custom component that renders a button with various properties such as text, URL, and icon.\n\nThe `Sigmanauts` component consists of two main sections: an image and a text section. The image section displays an icon retrieved from a custom `icons-map` module using the `getIconComponentByName` function. The text section displays the title, subtitle, and description of the Sigmanaut Training Programme. The title and subtitle are displayed in two different formats depending on the screen size. The description is displayed using the `FormattedMessage` component, which allows for the use of variables and HTML tags.\n\nFinally, the component renders a `Button` component that encourages users to apply for the programme. The text of the button is retrieved from the `intl` object using the `formatMessage` function, which formats the text based on the user's locale. The `Button` component also has various properties such as URL, icon, and color, which are used to customize its appearance.\n\nOverall, the `Sigmanauts` component is an important part of the Ergoweb website as it provides information about a key programme and encourages users to apply for it. The use of localized text and custom components makes the component more accessible and user-friendly.",
      "questions": "1. What is the purpose of the `Sigmanauts` component?\n- The `Sigmanauts` component is a training program for Ergo, and this code renders the program's information and a button to apply.\n\n2. What is the role of the `useIntl` hook in this code?\n- The `useIntl` hook is used to format the text for the button based on the user's locale.\n\n3. What is the purpose of the `getIconComponentByName` function?\n- The `getIconComponentByName` function is used to render an icon associated with the `Sigmanauts` program."
    },
    {
      "fileName": "Spotlight.tsx",
      "filePath": "components/community/Spotlight.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/community/Spotlight.tsx",
      "summary": "The code above is a React component called `Spotlight` that renders a section of a web page. The purpose of this component is to display a title, a subtitle, and a button that links to a blog page. The component imports two modules: `FormattedMessage` and `useIntl` from the `react-intl` library, and `Button` from a local file.\n\nThe `FormattedMessage` component is used to display localized text. It takes two props: `defaultMessage` and `id`. The `defaultMessage` prop is the default text to display if no translation is available, and the `id` prop is a unique identifier for the text that needs to be translated. The `useIntl` hook is used to access the `intl` object, which provides methods for formatting and displaying localized text.\n\nThe `Spotlight` component returns a `div` element that contains a `h1` or `h3` element, depending on the screen size, and a `Button` component. The `h1` or `h3` element displays the title \"Spotlight\" in bold. The `FormattedMessage` component is used to provide a translation for the title. The `Button` component displays a button with the text \"SEE ALL POSTS\" and an arrow icon. The text is translated using the `intl.formatMessage` method, which takes an object with the `id` and `defaultMessage` properties as an argument. The `Button` component also takes several props that customize its appearance and behavior, such as `url`, `newTab`, `textColor`, and `iconColor`.\n\nThis component can be used in a larger project to display a section that highlights recent or popular blog posts. The `Spotlight` component can be customized by changing the title, subtitle, and button text, as well as the button's appearance and behavior. The component can also be translated into different languages by providing translations for the `id` props used in the `FormattedMessage` components. Overall, the `Spotlight` component provides a reusable and flexible way to display a section that promotes blog content.",
      "questions": "1. What is the purpose of the `useIntl` hook and how is it used in this code?\n   - The `useIntl` hook is used to access the internationalization API provided by `react-intl`. In this code, it is used to format the text for the button based on the user's locale.\n2. What is the significance of the `Spotlight` component and how is it rendered?\n   - The `Spotlight` component is a UI component that displays a title and a button. It is rendered as a div with the id \"Spotlight\" and a set of CSS classes that control its layout and appearance.\n3. What are the props passed to the `Button` component and what do they do?\n   - The `Button` component is passed several props that control its text, URL, appearance, and behavior. These include `text` for the button label, `url` for the link destination, `newTab` to open the link in a new tab, `underline` to add an underline to the text, `textColor` and `background` to control the button's color scheme, and `icon` and `iconColor` to add an icon to the button."
    }
  ],
  "folders": [],
  "summary": "The `community` folder contains components related to displaying information about the Ergo community, its members, and resources. These components can be used together to create a comprehensive community section on the Ergoweb website.\n\n### CommunityCard.tsx\n\n`CommunityCard` is a reusable card component that displays a title, icon, text, and a link to an external URL. It can be used to create cards for various community resources, such as social media pages or forums.\n\nExample usage:\n\n```jsx\n<CommunityCard\n  title=\"Join our Discord server\"\n  icon=\"discord\"\n  text=\"Connect with other members of our community on Discord.\"\n  url=\"https://discord.gg/example\"\n/>\n```\n\n### CommunityCardsFeed.tsx\n\n`JoinUs` is a component that renders a section with links to social media platforms and community resources related to the Ergo blockchain platform. It uses the `CommunityCard` component to display each link card.\n\nExample usage:\n\n```jsx\nimport JoinUs from './JoinUs';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Welcome to the Ergo Community!</h1>\n      <JoinUs />\n    </div>\n  );\n}\n```\n\n### CommunityHero.tsx\n\n`CommunityHero` is a simple component that renders a section of a webpage with a localized subtitle and a heading. It can be used as part of a larger community page.\n\nExample usage:\n\n```jsx\nimport CommunityHero from './CommunityHero';\n\nfunction CommunityPage() {\n  return (\n    <div>\n      <CommunityHero />\n      {/* other community page content */}\n    </div>\n  );\n}\n```\n\n### ErgoFoundation.tsx\n\n`ErgoFoundation` is a component that displays information about the Ergo Foundation and its goals. It can be used as a standalone section or as part of a larger page about the Ergo Platform.\n\n### HallOfFame.tsx\n\n`HallOfFame` is a component that showcases people involved in the Ergo project and their contributions. It displays a tabbed interface with different groups of people and uses the `HallOfFamePerson` component to display information about each person.\n\n### OurMission.tsx\n\n`OurMission` is a reusable component that displays information about the Ergo Foundation's mission. It uses the `FormattedMessage` and `Button` components for easy localization and customization.\n\n### Sigmanauts.tsx\n\n`Sigmanauts` is a component that provides information about the Sigmanaut Training Programme and encourages users to apply. It uses localized text and custom components for accessibility and user-friendliness.\n\n### Spotlight.tsx\n\n`Spotlight` is a reusable component that displays a section promoting blog content. It can be customized by changing the title, subtitle, and button text, as well as the button's appearance and behavior. The component can also be translated into different languages using the `FormattedMessage` components.",
  "questions": ""
}