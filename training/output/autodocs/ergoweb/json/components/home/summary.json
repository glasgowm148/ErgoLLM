{
  "folderName": "home",
  "folderPath": ".autodoc/docs/json/components/home",
  "url": "https://github.com/ergoplatform/ergoweb/.autodoc/docs/json/components/home",
  "files": [
    {
      "fileName": "Autolykos.tsx",
      "filePath": "components/home/Autolykos.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/home/Autolykos.tsx",
      "summary": "The code is a React component that renders a section of the Ergoweb website called Autolykos. The Autolykos section provides information about the Proof of Work algorithm used in the Ergo blockchain. The component imports two modules from the react-intl library: FormattedMessage and useIntl. FormattedMessage is used to format messages based on the user's locale, while useIntl is a hook that provides access to the internationalization API.\n\nThe Autolykos component renders two different layouts depending on the screen size. On small screens, the component renders a single column layout, while on larger screens, it renders a two-column layout. Both layouts contain the same information, but the two-column layout has a different arrangement of the content.\n\nThe component uses the useIntl hook to format the text of the button that links to the \"Get ERG\" page. The button text is obtained from the message with the ID \"components.autolykos.button\" and the default message \"MINE ERG\". The formatted message is stored in the button variable and passed as a prop to the Button component.\n\nThe Autolykos component also uses the FormattedMessage component to format the header, title, and text of the Autolykos section. The header is obtained from the message with the ID \"components.autolykos.header\", while the title is obtained from the message with the ID \"components.autolykos.title\". The text is obtained from the message with the ID \"components.autolykos.text\". The text message contains HTML tags, which are rendered using the values prop of the FormattedMessage component.\n\nThe Button component is a custom component that renders a button with an optional icon. The component accepts several props that control the appearance and behavior of the button, such as text, textColor, url, newTab, underline, background, iconColor, and icon.\n\nOverall, the Autolykos component provides an informative section about the Proof of Work algorithm used in the Ergo blockchain and encourages users to mine ERG by linking to the \"Get ERG\" page. The component uses the react-intl library to provide internationalization support and the Button component to render a customizable button.",
      "questions": "1. What is the purpose of the `useIntl` hook and how is it used in this code?\n   - The `useIntl` hook is used to access the internationalization API provided by the `react-intl` library. It is used in this code to format the text for the button component based on the user's locale.\n2. What is the significance of the `Autolykos` component and how is it structured?\n   - The `Autolykos` component appears to be a reusable component that renders a section of the Ergoweb website related to the Autolykos algorithm. It is structured as a functional component that returns JSX code for two different layouts depending on the screen size.\n3. What is the purpose of the `FormattedMessage` component and how is it used in this code?\n   - The `FormattedMessage` component is used to format text strings based on the user's locale. It is used in this code to format the header, title, and text content for the Autolykos section of the website. The `values` prop is used to insert HTML markup into the text content."
    },
    {
      "fileName": "Highlights.tsx",
      "filePath": "components/home/Highlights.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/home/Highlights.tsx",
      "summary": "The code is a React component that renders a slideshow of highlights for the Ergo blockchain platform. The component uses the Swiper library to create a responsive and interactive slideshow that displays information about the platform's features and values. \n\nThe component imports the FormattedMessage component from the react-intl library, which is used to display localized messages. It also imports the Swiper and Navigation components from the Swiper library, which are used to create the slideshow. Finally, it imports the getIconComponentByName function from the utils/icons-map module, which is used to display SVG icons.\n\nThe component defines an array of objects called slides, each of which contains information about a specific highlight. Each slide object contains a titleMessage, quoteMessage, textMessage, and an SVG icon. The titleMessage, quoteMessage, and textMessage properties are all FormattedMessage components that display localized messages. The SVG icon is displayed using the getIconComponentByName function, which takes the name of the icon and some additional properties like the viewBox, height, and width.\n\nThe component then defines a FormattedMessageFixed function that simply returns a FormattedMessage component. This function is used to fix a bug in the react-intl library that causes an error when a FormattedMessage component is used inside a SwiperSlide component.\n\nFinally, the component defines a Highlights function that renders the slideshow. The function returns a div element that contains the Swiper component and some other elements like a title and some text. The Swiper component iterates over the slides array and renders a SwiperSlide component for each slide. The SwiperSlide component contains the content for each slide, which includes the SVG icon, the title, the quote, and the text.\n\nThe Highlights component is used in the larger Ergo web application to showcase the platform's features and values to users. The component is responsive and interactive, making it easy for users to navigate through the highlights and learn more about the platform. The use of localized messages and SVG icons also helps to make the component more accessible and user-friendly.",
      "questions": "1. What is the purpose of the `Highlights` component?\n- The `Highlights` component is responsible for rendering a slideshow of three slides that highlight different features of the Ergo platform.\n\n2. What is the role of the `FormattedMessageFixed` function?\n- The `FormattedMessageFixed` function is a custom wrapper around the `FormattedMessage` component from the `react-intl` library. It is used to provide default messages and values for the `titleMessage`, `quoteMessage`, and `textMessage` properties of each slide.\n\n3. What is the significance of the `getIconComponentByName` function?\n- The `getIconComponentByName` function is used to dynamically render an SVG icon based on its name. It is imported from the `../../utils/icons-map` module and is used to display the icon associated with each slide."
    },
    {
      "fileName": "HomeHero.tsx",
      "filePath": "components/home/HomeHero.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/home/HomeHero.tsx",
      "summary": "The `HomeHero` component is a React component that renders a hero section on the homepage of the ErgoWeb project. The hero section consists of a title, a description, and a call-to-action button. The component also includes a background video that changes depending on the user's color scheme preference.\n\nThe `useIntl` hook from the `react-intl` library is used to provide internationalization support for the component. The `intl` object is used to format the text for the call-to-action button based on the user's locale.\n\nThe title and description are rendered using the `FormattedMessage` component from the `react-intl` library. This component allows for the dynamic rendering of text based on the user's locale. The `id` prop is used to identify the text to be rendered, and the `defaultMessage` prop is used as a fallback in case the text is not available in the user's locale.\n\nThe call-to-action button is rendered using the `Button` component from the `../Button` module. The `text` prop is used to set the text of the button, and the `url` prop is used to set the URL that the button links to. The `background` prop is used to set the background color of the button, and the `icon` prop is used to set the icon that appears on the button.\n\nThe background video is rendered using the `video` element. The `autoPlay`, `playsInline`, `loop`, and `muted` props are used to configure the video playback. The `disablePictureInPicture` and `controlsList` props are used to disable picture-in-picture mode and the download button, respectively. The `source` element is used to specify the video file to be played.\n\nOverall, the `HomeHero` component provides an engaging and informative introduction to the ErgoWeb project, with support for internationalization and dynamic content rendering.",
      "questions": "1. What is the purpose of the `useIntl` hook and how is it used in this code?\n   - The `useIntl` hook is used to access the internationalization API provided by the `react-intl` library. In this code, it is used to format the text for the button component based on the user's locale.\n2. What is the significance of the `id` prop in the `FormattedMessage` components?\n   - The `id` prop is used to identify the message that needs to be translated. It is used as a key to look up the translated message in the translation files.\n3. What is the purpose of the `values` prop in the `FormattedMessage` component for the `components.homeHero.text` message?\n   - The `values` prop is used to pass dynamic values to the translated message. In this code, it is used to insert a line break (`<br />`) in the text of the message."
    },
    {
      "fileName": "HomeInfo.tsx",
      "filePath": "components/home/HomeInfo.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/home/HomeInfo.tsx",
      "summary": "The `HomeInfo` component is responsible for displaying various statistics related to the Ergo blockchain on the homepage of the Ergoweb project. The component receives four props: `blockReward`, `circulatingSupply`, `transactionPerDay`, and `hashRate`, which are used to display the corresponding statistics. If any of these props are not provided, default values are used instead.\n\nThe component uses the `react-countup` library to animate the counting up of the statistics when they come into view. The `useInView` hook from the `react-intersection-observer` library is used to detect when the component is in view and trigger the animation.\n\nThe component renders differently depending on the screen size. On larger screens, the statistics are displayed in a row with vertical lines separating them. On smaller screens, the statistics are displayed in a column with horizontal lines separating them.\n\nEach statistic is displayed with a title and a value. The title is an internationalized string that is translated based on the user's locale using the `react-intl` library. The value is the corresponding statistic, which is formatted with commas and, in the case of `hashRate`, with two decimal places and a \"TH/s\" suffix.\n\nOverall, the `HomeInfo` component provides an eye-catching and informative display of key statistics related to the Ergo blockchain, which can help users understand the current state of the network.",
      "questions": "1. What is the purpose of the `useInView` hook and how is it used in this code?\n- The `useInView` hook is used to determine if a component is currently in view on the screen. It is used in this code to trigger the animation of the CountUp component when it comes into view.\n\n2. What is the significance of the default values for the Props object?\n- The default values for the Props object are used in case the component is rendered without any props being passed in. This ensures that the component will still function properly even if the necessary props are not provided.\n\n3. What is the purpose of the `CountUp` component and how is it used in this code?\n- The `CountUp` component is used to animate the display of numerical values. It is used in this code to display the values for block reward, circulating supply, transactions per day, and hash rate with a counting animation effect."
    },
    {
      "fileName": "News.tsx",
      "filePath": "components/home/News.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/home/News.tsx",
      "summary": "The `News` component is responsible for rendering the latest news and blog posts on the Ergoweb website. It receives a prop called `news`, which is an array of objects containing information about each post, such as the title, subtitle, date, and URL. \n\nThe component is built using React and several third-party libraries, including `react-intl` for internationalization, `swiper` for the carousel, and a custom `Button` component. \n\nThe component is divided into two main sections: the title and the carousel. The title is a simple heading that displays the words \"News & Blog\" in a stylized format. The carousel is a Swiper component that displays each post as a slide. \n\nEach slide contains the post's date, title, subtitle, and a \"READ\" button that links to the full post. The date is formatted using the `FormattedDate` component from `react-intl`, which formats the date based on the user's locale. The \"READ\" button is a custom `Button` component that takes several props, including the text to display, the URL to link to, and the color scheme. \n\nThe carousel is responsive and includes pagination bullets that allow the user to navigate between slides. The pagination is implemented using the `Pagination` module from `swiper`. \n\nOverall, the `News` component is a key part of the Ergoweb website, providing users with easy access to the latest news and blog posts. It is flexible and customizable, allowing developers to easily add new posts and customize the styling and functionality of the carousel. \n\nExample usage:\n\n```jsx\nimport News from './News';\n\nconst news = [\n  {\n    attributes: {\n      title: 'New Product Launch',\n      subtitle: 'Introducing our latest ergonomic chair',\n      date: '2022-01-01',\n      url: '/blog/new-product-launch',\n    },\n  },\n  {\n    attributes: {\n      title: 'Ergonomic Tips for Remote Work',\n      subtitle: 'Stay comfortable and productive while working from home',\n      date: '2021-12-01',\n      url: '/blog/ergonomic-tips-for-remote-work',\n    },\n  },\n  // more posts...\n];\n\nfunction App() {\n  return (\n    <div>\n      <News news={news} />\n    </div>\n  );\n}\n```",
      "questions": "1. What external libraries or modules are being used in this code?\n- The code is importing `react-intl`, `swiper/react`, and `swiper` modules, as well as a custom `Button` component.\n\n2. What is the purpose of the `News` component and what props does it expect?\n- The `News` component is rendering a section of the website that displays a list of news articles. It expects a `news` prop, which should be an array of objects containing attributes such as `date`, `title`, `subtitle`, and `url`.\n\n3. What styling classes or inline styles are being applied to the rendered HTML elements?\n- The code is applying various classes from the Tailwind CSS framework, such as `max-w-7xl`, `p-4`, `text-right`, `mx-20`, and `mb-6`. It is also applying an inline style to the outermost `div` element with a `zIndex` of 12."
    },
    {
      "fileName": "Partners.tsx",
      "filePath": "components/home/Partners.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/home/Partners.tsx",
      "summary": "The `Partners` component is responsible for rendering a list of partners on a web page. It receives a prop called `partners`, which is an array of objects containing information about each partner. The component uses the `useTheme` hook from the `next-themes` library to determine the current theme of the website. It then maps over the `partners` array and renders a `div` for each partner.\n\nEach partner `div` contains an `a` tag that links to the partner's website. The `Image` component from the `next/image` library is used to display the partner's logo. The `Image` component takes several props, including the `src` of the image, its `width` and `height`, and an `alt` text for accessibility purposes.\n\nThe `Image` component is conditionally rendered based on the current theme of the website. If the theme is `dark` and the partner has a `dark` logo, that logo is displayed. Otherwise, the regular logo is displayed. This allows for a consistent look and feel across the website, regardless of the user's chosen theme.\n\nThe `Partners` component also includes some styling using Tailwind CSS classes. The `max-w-[1300px]` class sets a maximum width for the component, while the `py-12` and `px-4` classes add padding to the top and bottom and left and right of the component, respectively. The `grid` and `grid-cols-2` classes create a grid layout with two columns, and the `md:grid-cols-3` class changes the number of columns to three on medium-sized screens. Finally, the `text-center` class centers the heading text.\n\nOverall, the `Partners` component is a reusable component that can be used on any page that needs to display a list of partners. It is flexible enough to handle different numbers of partners and different logo sizes, and it ensures a consistent look and feel across the website.",
      "questions": "1. What is the purpose of the `Partners` component?\n   - The `Partners` component is used to display a list of partners with their respective images and URLs.\n\n2. What is the role of the `useTheme` hook from `next-themes`?\n   - The `useTheme` hook is used to get the current theme of the website, which is then used to conditionally render the partner images based on whether the theme is dark or not.\n\n3. What is the expected data type for the `partners` prop?\n   - The `partners` prop is expected to be an array of objects, where each object represents a partner and contains attributes such as `id`, `name`, `url`, and `image`."
    },
    {
      "fileName": "UniqueErgo.tsx",
      "filePath": "components/home/UniqueErgo.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/home/UniqueErgo.tsx",
      "summary": "The `UniqueErgo` component is a React component that renders a section of the Ergo website that showcases the unique features of the Ergo blockchain. The component consists of a set of cards, each of which represents a unique feature of the Ergo blockchain. Each card contains a title, a text description, an icon, and a button that links to more information about the feature.\n\nThe component uses the `useEffect` hook to add a click event listener to each card. When a card is clicked, it becomes the active card and its description is displayed. The active card is highlighted with a border and a label that displays the card's icon and title.\n\nThe component uses the `FormattedMessage` component from the `react-intl` library to provide internationalization support for the card titles and descriptions. The `Button` component is also used to render the buttons on each card.\n\nOverall, the `UniqueErgo` component is an important part of the Ergo website as it helps to showcase the unique features of the Ergo blockchain in an interactive and engaging way.",
      "questions": "1. What is the purpose of the `useEffect` hook in this code?\n- The `useEffect` hook is used to add event listeners to each card element and set the initial active card. \n\n2. What is the significance of the `active` class in the card elements?\n- The `active` class is used to visually indicate which card is currently selected by the user. \n\n3. What is the role of the `Button` component in this code?\n- The `Button` component is used to render a clickable button with customizable text, URL, and icon properties. It is used in each card to provide a way for the user to explore more information related to that card."
    },
    {
      "fileName": "UsingErg.tsx",
      "filePath": "components/home/UsingErg.tsx",
      "url": "https://github.com/ergoplatform/ergoweb/components/home/UsingErg.tsx",
      "summary": "The code defines a React component called `UsingErg` that renders a section of a webpage. The section contains four cards, each with a title, text, and icon, and each linking to a different page on the website. The purpose of this component is to provide users with information on how to use the Ergo cryptocurrency.\n\nThe `cards` array contains four objects, each representing a card. Each object has a `title`, `text`, `icon`, and `url` property. The `title` and `text` properties are React components that contain localized text. The `icon` property is a string that represents the name of an icon to be displayed on the card. The `url` property is a string that represents the URL of the page to which the card links.\n\nThe `UsingErg` component renders the section of the webpage using the `cards` array. It first renders a subtitle, title, and description above the cards. The subtitle and title are localized text, and the description is a paragraph of text that describes the Ergo ecosystem. The cards are then rendered in a grid using the `cards.map()` method. Each card is a `Link` component that links to the URL specified in its `url` property. The card's `title`, `text`, and `icon` are displayed using the `getIconComponentByName()` function, which returns a React component that displays the specified icon.\n\nOverall, this component provides users with an easy-to-use interface for learning about and accessing different aspects of the Ergo cryptocurrency ecosystem. By clicking on the cards, users can quickly navigate to different pages on the website to learn more about mining, buying, storing, and using Ergo.",
      "questions": "1. What is the purpose of the `cards` array?\n   - The `cards` array contains objects with information about different ways to use or obtain ERG, including titles, descriptions, icons, and URLs.\n2. What is the `FormattedMessageFixed` function used for?\n   - The `FormattedMessageFixed` function is a wrapper around the `FormattedMessage` component from the `react-intl` library, used to provide internationalization support for the text content of the `cards`.\n3. What is the purpose of the `getIconComponentByName` function?\n   - The `getIconComponentByName` function is used to dynamically retrieve and render SVG icons based on their names, which are stored in the `icon` property of each `card` object."
    }
  ],
  "folders": [],
  "summary": "The `.autodoc/docs/json/components/home` folder contains several React components that are responsible for rendering various sections of the ErgoWeb project's homepage. These components showcase the unique features of the Ergo blockchain, display key statistics, and provide users with the latest news and blog posts.\n\nThe `Autolykos.tsx` component renders a section about the Proof of Work algorithm used in the Ergo blockchain. It uses the `react-intl` library for internationalization support and a custom `Button` component for linking to the \"Get ERG\" page. Example usage:\n\n```jsx\nimport Autolykos from './Autolykos';\n\nfunction App() {\n  return (\n    <div>\n      <Autolykos />\n    </div>\n  );\n}\n```\n\nThe `Highlights.tsx` component renders a responsive and interactive slideshow that displays information about the platform's features and values using the Swiper library. Example usage:\n\n```jsx\nimport Highlights from './Highlights';\n\nfunction App() {\n  return (\n    <div>\n      <Highlights />\n    </div>\n  );\n}\n```\n\nThe `HomeHero.tsx` component renders a hero section on the homepage with a title, description, call-to-action button, and a background video. It uses the `react-intl` library for internationalization support. Example usage:\n\n```jsx\nimport HomeHero from './HomeHero';\n\nfunction App() {\n  return (\n    <div>\n      <HomeHero />\n    </div>\n  );\n}\n```\n\nThe `HomeInfo.tsx` component displays key statistics related to the Ergo blockchain using the `react-countup` library for animating the counting up of the statistics. Example usage:\n\n```jsx\nimport HomeInfo from './HomeInfo';\n\nfunction App() {\n  return (\n    <div>\n      <HomeInfo />\n    </div>\n  );\n}\n```\n\nThe `News.tsx` component renders the latest news and blog posts using a Swiper carousel. It takes a `news` prop, which is an array of objects containing information about each post. Example usage:\n\n```jsx\nimport News from './News';\n\nconst news = [\n  // news objects...\n];\n\nfunction App() {\n  return (\n    <div>\n      <News news={news} />\n    </div>\n  );\n}\n```\n\nThe `Partners.tsx` component renders a list of partners with their logos and links to their websites. It takes a `partners` prop, which is an array of objects containing information about each partner. Example usage:\n\n```jsx\nimport Partners from './Partners';\n\nconst partners = [\n  // partner objects...\n];\n\nfunction App() {\n  return (\n    <div>\n      <Partners partners={partners} />\n    </div>\n  );\n}\n```\n\nThe `UniqueErgo.tsx` component showcases the unique features of the Ergo blockchain using a set of interactive cards. Example usage:\n\n```jsx\nimport UniqueErgo from './UniqueErgo';\n\nfunction App() {\n  return (\n    <div>\n      <UniqueErgo />\n    </div>\n  );\n}\n```\n\nThe `UsingErg.tsx` component renders a section with four cards that provide information on how to use the Ergo cryptocurrency. Example usage:\n\n```jsx\nimport UsingErg from './UsingErg';\n\nfunction App() {\n  return (\n    <div>\n      <UsingErg />\n    </div>\n  );\n}\n```\n\nThese components work together to create a comprehensive and informative homepage for the ErgoWeb project, providing users with an engaging and informative introduction to the Ergo blockchain platform.",
  "questions": ""
}