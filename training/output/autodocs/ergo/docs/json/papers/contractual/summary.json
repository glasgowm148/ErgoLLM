{
  "folderName": "contractual",
  "folderPath": ".autodoc/docs/json/papers/contractual",
  "url": "https://github.com/ergoplatform/ergo/.autodoc/docs/json/papers/contractual",
  "files": [
    {
      "fileName": "compile.sh",
      "filePath": "papers/contractual/compile.sh",
      "url": "https://github.com/ergoplatform/ergo/papers/contractual/compile.sh",
      "summary": "The code above is a set of commands that can be used to compile a LaTeX document. Specifically, it compiles a document called \"main\" using the pdflatex compiler, runs the bibtex program to generate a bibliography, and then runs pdflatex twice more to ensure that all references and citations are properly resolved. \n\nThis code is likely to be used as part of a larger project that involves writing and compiling LaTeX documents. LaTeX is a popular document preparation system that is widely used in academia and other fields for producing high-quality documents with complex formatting, mathematical equations, and bibliographies. \n\nBy using these commands, the user can compile their LaTeX document into a PDF file that can be easily shared and distributed. The bibtex program is used to generate a bibliography from a separate .bib file that contains all of the references cited in the document. This ensures that the bibliography is properly formatted and consistent with the citation style used in the document. \n\nHere is an example of how these commands might be used in practice:\n\n```\npdflatex mydocument.tex\nbibtex mydocument\npdflatex mydocument.tex\npdflatex mydocument.tex\n```\n\nIn this example, the user is compiling a document called \"mydocument.tex\". The first pdflatex command compiles the document, the bibtex command generates the bibliography, and the two subsequent pdflatex commands ensure that all references and citations are properly resolved. \n\nOverall, this code is a useful tool for anyone working with LaTeX documents, and it demonstrates the importance of properly compiling and formatting documents to ensure their accuracy and readability.",
      "questions": "1. **What is the purpose of this code?** \nA smart developer might wonder what this code is doing and what its purpose is within the ergo project.\n\n2. **What dependencies are required for this code to run?** \nA smart developer might want to know what dependencies are required to run this code, such as whether pdflatex and bibtex need to be installed.\n\n3. **What is the expected output of this code?** \nA smart developer might want to know what the expected output of this code is, such as whether it generates a PDF file or some other type of document."
    },
    {
      "fileName": "main.tex",
      "filePath": "papers/contractual/main.tex",
      "url": "https://github.com/ergoplatform/ergo/papers/contractual/main.tex",
      "summary": "This code is for a LaTeX document that discusses the concept of \"contractual money\" in the context of cryptocurrencies, specifically focusing on the Ergo platform. Contractual money refers to digital money with a usage contract in the form of executable code. This allows for the creation of digital coins whose use cases are explicitly bounded by a contract, enabling more control over how the money is spent and ensuring that it is used according to the terms of the contract.\n\nThe document begins by explaining the transactional model of Bitcoin and Ergo, highlighting the differences between the two platforms. It then provides several use cases for contractual money, such as a one-time microcredit system, a combination of time and local currencies, and a Local Exchange Trading System (LETS).\n\nIn the one-time microcredit example, a private digital scrip is issued for a microcredit use-case, and a contract enforces the borrower to spend the money only as described in the contract. In the combination of time and local currencies example, money is issued by a local government to promote the local economy, with specific rules on how the money can be spent and exchanged.\n\nThe document also revisits the famous Wörgl experiment, a successful example of a local currency, and analyzes it from a contractual money point of view. Finally, the document describes two possible LETS implementations on top of the Ergo blockchain: one with a trusted committee and the other with cryptocurrency collaterals to secure debts. This is claimed to be the first implementation of LETS using a blockchain.\n\nOverall, the document demonstrates the potential of contractual money in various use cases and highlights the benefits of using cryptocurrencies like Ergo to implement such systems.",
      "questions": "1. **What is the purpose of the Ergo project and how does it differ from Bitcoin?**\n\n   The Ergo project is a cryptocurrency that builds upon the same UTXO model as Bitcoin but extends its functionality with additional features. Ergo allows for more complex programmability by providing access to the entire spending transaction and the block solution in the execution context. This enables the creation of Turing-complete contracts and the implementation of contractual money, where digital coins can be explicitly bound to a contract in the form of executable code.\n\n2. **What is contractual money and how does it differ from traditional money?**\n\n   Contractual money is digital money that is bound to a contract in the form of executable code, which enforces specific rules and conditions for its usage. This is in contrast to traditional money, where contracts are external to the money itself and may be in the form of laws, corporate terms, or informal agreements. Contractual money allows for more precise control over how the money is spent and can be used to implement various use cases, such as microcredit systems or local exchange trading systems.\n\n3. **How does the Local Exchange Trading System (LETS) work in the context of Ergo?**\n\n   The Ergo blockchain can be used to implement a Local Exchange Trading System (LETS), which is a local mutual credit association that allows members to create common credit money individually. Two possible implementations are described: one with a trusted committee managing new participants and another trustless solution that requires collateral in cryptocurrency. Both implementations involve the use of two contracts, a management contract for enrolling new users and a membership contract for performing LETS transactions. The trustless solution also requires a trusted oracle to provide exchange rate information between the LETS currency and the collateral cryptocurrency."
    },
    {
      "fileName": "sources.bib",
      "filePath": "papers/contractual/sources.bib",
      "url": "https://github.com/ergoplatform/ergo/papers/contractual/sources.bib",
      "summary": "This code consists of a collection of bibliographic references related to the Ergo project, a resilient platform for contractual money. The references cover various topics such as cryptocurrencies, blockchain technology, smart contracts, and alternative currency systems.\n\nFor example, the reference `pascalCoin` points to the white paper of Pascal Coin, a cryptocurrency that aims to provide a scalable and easy-to-use platform for transactions. Similarly, the reference `eth2016dos` discusses a denial-of-service attack on the Ethereum network, which is a well-known platform for creating decentralized applications and smart contracts.\n\nThe code also includes references to research papers that analyze different aspects of cryptocurrencies and blockchain technology. The paper `atzei2017survey` presents a survey of attacks on Ethereum smart contracts, while `rivest2001leak` discusses methods for leaking secrets in cryptographic systems.\n\nAdditionally, the code contains references to articles and blog posts that explore the use of Ergo for creating local exchange trading systems (LETS). The articles `lets-trusted` and `lets-trustless` describe the development of trustless and trusted LETS on top of Ergo, respectively.\n\nOverall, these references provide a comprehensive overview of the research and development efforts related to the Ergo project and its underlying technologies. They can be used as a starting point for further research and development in the field of cryptocurrencies, smart contracts, and alternative currency systems.",
      "questions": "1. **Question**: What is the purpose of this code?\n   **Answer**: This code is a collection of bibliography entries in BibTeX format, which is used to manage and format citations and references in research papers and other documents.\n\n2. **Question**: How are these bibliography entries used in a project?\n   **Answer**: These bibliography entries can be imported into a LaTeX document or other text processing software that supports BibTeX, and then used to automatically generate citations and a reference list in the desired format.\n\n3. **Question**: Are there any specific dependencies or requirements to use this code?\n   **Answer**: To use this code, you would need a text processing software that supports BibTeX, such as LaTeX, along with the appropriate packages and settings to manage and format the citations and references."
    }
  ],
  "folders": [],
  "summary": "The `.autodoc/docs/json/papers/contractual` folder contains code and documentation related to the concept of \"contractual money\" in the context of cryptocurrencies, specifically focusing on the Ergo platform. Contractual money refers to digital money with a usage contract in the form of executable code, enabling more control over how the money is spent and ensuring that it is used according to the terms of the contract.\n\nThe `main.tex` file is a LaTeX document that discusses the transactional model of Bitcoin and Ergo, provides several use cases for contractual money, revisits the famous Wörgl experiment, and describes two possible Local Exchange Trading System (LETS) implementations on top of the Ergo blockchain. This document demonstrates the potential of contractual money in various use cases and highlights the benefits of using cryptocurrencies like Ergo to implement such systems.\n\nThe `compile.sh` file is a set of commands that can be used to compile the `main.tex` LaTeX document into a PDF file. This ensures that the document is properly formatted and consistent with the citation style used in the document. For example, to compile a document called \"mydocument.tex\", the user would run the following commands:\n\n```\npdflatex mydocument.tex\nbibtex mydocument\npdflatex mydocument.tex\npdflatex mydocument.tex\n```\n\nThe `sources.bib` file contains a collection of bibliographic references related to the Ergo project, covering topics such as cryptocurrencies, blockchain technology, smart contracts, and alternative currency systems. These references provide a comprehensive overview of the research and development efforts related to the Ergo project and its underlying technologies and can be used as a starting point for further research and development in the field.\n\nIn summary, the `.autodoc/docs/json/papers/contractual` folder contains essential documentation and code for understanding and implementing contractual money using the Ergo platform. The `main.tex` file provides a detailed explanation of the concept and its use cases, while the `compile.sh` file helps compile the document into a readable format. The `sources.bib` file offers a collection of relevant references for further research and development.",
  "questions": ""
}