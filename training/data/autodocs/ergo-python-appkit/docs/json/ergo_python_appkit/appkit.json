{
  "fileName": "appkit.py",
  "filePath": "ergo_python_appkit/appkit.py",
  "url": "https://github.com/ergo-pad/ergo-python-appkit/ergo_python_appkit/appkit.py",
  "summary": "The `ErgoAppKit` class in this code provides a high-level interface for interacting with the Ergo blockchain. It allows users to perform various operations such as compiling ErgoScript, creating and signing transactions, and querying the blockchain for unspent transaction outputs (UTXOs).\n\nThe class constructor takes parameters such as `nodeUrl`, `networkType`, `explorerUrl`, and `nodeApiKey` to configure the connection to the Ergo node and the explorer API. It also initializes the `ApiClient` and `ErgoClient` instances for making API calls.\n\nSome key methods in the `ErgoAppKit` class include:\n\n- `compileErgoScript(ergoScript: str, constants: Dict[str,typing.Any] = {})`: Compiles an ErgoScript and returns an ErgoTree object.\n- `tree2Address(ergoTree)`: Converts an ErgoTree object to an Ergo address.\n- `buildOutBox(value: int, tokens: Dict[str,int], registers, contract)`: Builds an output box for a transaction.\n- `getBoxesById(boxIds: List[str])`: Retrieves input boxes by their IDs.\n- `mintToken(value: int, tokenId: str, tokenName: str, tokenDesc: str, mintAmount: int, decimals: int, contract: ErgoContract)`: Mints a new token.\n- `boxesToSpend(address: str, nergToSpend: int, tokensToSpend: Dict[str,int] = {}, includeMempool: bool = True)`: Finds UTXOs to spend for a given address and amount.\n- `buildUnsignedTransaction(inputs: List[InputBox], outputs: List[OutBox], fee: int, sendChangeTo: ErgoAddress, tokensToBurn: Dict[str,int] = None, dataInputs: List[InputBox] = None, preHeader: PreHeader = None)`: Builds an unsigned transaction.\n- `signTransaction(unsignedTx: UnsignedTransaction)`: Signs an unsigned transaction.\n- `sendTransaction(signedTx: SignedTransaction)`: Sends a signed transaction to the Ergo network.\n\nThese methods can be used in combination to create, sign, and send transactions on the Ergo blockchain. For example, to create a transaction, one can first use `boxesToSpend` to find UTXOs, then `buildOutBox` to create output boxes, and finally `buildUnsignedTransaction` to create the unsigned transaction. The unsigned transaction can then be signed using `signTransaction` and sent to the network using `sendTransaction`.\n\nAdditionally, the code provides utility functions for working with Ergo values, addresses, and ErgoScript, such as `ergoValue`, `dummyContract`, `contractFromTree`, and `contractFromAddress`. These functions can be used to manipulate Ergo data structures and interact with the Ergo blockchain more easily.",
  "questions": "1. **Question**: What is the purpose of the `ErgoAppKit` class and its methods?\n   **Answer**: The `ErgoAppKit` class is a wrapper around various Ergo platform functionalities, such as creating and managing transactions, contracts, and addresses. Its methods provide a convenient way to interact with the Ergo blockchain, compile ErgoScript, create and sign transactions, and manage tokens and UTXOs.\n\n2. **Question**: How does the `ErgoAppKit` handle different network types (mainnet and testnet)?\n   **Answer**: The `ErgoAppKit` handles different network types by using the `NetworkType` enumeration. When initializing the `ErgoAppKit` instance, the `networkType` parameter is passed, which can be either \"mainnet\" or \"testnet\". This parameter is then used to set the appropriate network type for the ErgoAddressEncoder and other related functionalities.\n\n3. **Question**: How does the `ErgoAppKit` handle signing and sending transactions?\n   **Answer**: The `ErgoAppKit` provides methods for building unsigned transactions, signing them, and sending them to the Ergo network. The `buildUnsignedTransaction` method is used to create an unsigned transaction with the specified inputs, outputs, and other parameters. The `signTransaction` and `signTransactionWithNode` methods are used to sign the unsigned transaction using a local prover or the node's wallet API, respectively. Finally, the `sendTransaction` method is used to send the signed transaction to the Ergo network."
}