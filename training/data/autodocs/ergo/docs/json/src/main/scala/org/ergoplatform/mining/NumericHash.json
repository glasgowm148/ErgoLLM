{
  "fileName": "NumericHash.scala",
  "filePath": "src/main/scala/org/ergoplatform/mining/NumericHash.scala",
  "url": "https://github.com/ergoplatform/ergo/src/main/scala/org/ergoplatform/mining/NumericHash.scala",
  "summary": "The `NumericHash` class is a one-way cryptographic hash function that produces numbers in the range of [0,q). It takes a `BigInt` value `q` as input and calculates the Blake2b256 hash of a provided input. It then checks whether the result is in the range from 0 to a maximum number divisible by `q` without remainder. If the result is within the range, it returns the result mod `q`. Otherwise, it makes one more iteration using the hash as an input. This is done to ensure uniform distribution of the resulting numbers.\n\nThe `NumericHash` class is useful in the larger project for generating random numbers in a specific range. For example, it can be used in the mining process of the Ergo blockchain to generate a random number that satisfies a certain condition. The `NumericHash` class ensures that the generated number is within the desired range and has a uniform distribution.\n\nThe `validRange` variable is the biggest number <= 2^256 that is divisible by `q` without remainder. This is used to check whether the generated number is within the desired range.\n\nThe `hash` method takes an array of bytes as input and recursively calculates the hash until a number within the desired range is generated. The `@tailrec` annotation ensures that the method is tail-recursive and does not cause a stack overflow.\n\nHere is an example of how to use the `NumericHash` class:\n\n```scala\nval q = BigInt(\"100000000000000000000000000000000000000000000000000000000000000000000000000\")\nval numericHash = new NumericHash(q)\nval input = \"hello world\".getBytes\nval result = numericHash.hash(input)\nprintln(result)\n```\n\nIn this example, a `BigInt` value `q` is created, and a new instance of the `NumericHash` class is created with `q` as input. An input string \"hello world\" is converted to an array of bytes, and the `hash` method is called with the input. The resulting number is printed to the console.",
  "questions": "1. What is the purpose of the `NumericHash` class?\n- The `NumericHash` class is a one-way cryptographic hash function that produces numbers in the [0,q) range.\n\n2. What is the significance of the `validRange` variable?\n- The `validRange` variable is the biggest number <= 2^256 that is divisible by q without remainder.\n\n3. Why does the `hash` method use recursion?\n- The `hash` method uses recursion to ensure uniform distribution of the resulting numbers by making one more iteration using hash as an input if the result is not in the valid range."
}